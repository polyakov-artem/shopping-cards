{"version":3,"sources":["store/actionTypes/cardsTypes.js","store/actions/cardsActions.js","store/actionTypes/cartTypes.js","store/actions/cartActions.js","Components/Checkbox/Checkbox.js","Components/Filter/Filter.js","Components/Select/Select.js","Components/SortBy/SortBy.js","Components/ResultsPanel/ResultsPanel.js","Components/Card/Card.js","Components/Loader/Loader.js","Components/Cards/Cards.js","Components/CartItem/CartItem.js","Components/CartList/CartList.js","Components/Cart/Cart.js","Components/App/App.js","serviceWorker.js","store/reducers/cartReducer.js","store/reducers/cardsReducer.js","store/reducers/rootReducer.js","index.js"],"names":["LOADING_STARTED","UPDATE_PRODUCTS","LOADING_ENDED","LOADING_ERROR","UPDATE_ARRANGED_PRODUCTS","UPDATE_FILTERS","UPDATE_SORTBY","arrangeProducts","dispatch","getState","cardsReducer","sortBy","filters","products","arrangedProducts","array","sort","a","b","price","length","filter","product","availableSizes","some","size","indexOf","updateArrangedProducts","type","payload","updateSortBy","TOGGLE_MENU","UPDATE_CART_PRODUCTS","toggleMenu","updateCartProducts","cartProducts","findIndex","arrayProp","value","j","i","Checkbox","props","classes","join","className","onChange","label","sizes","Filter","filterProducts","has","delete","add","updateFilters","Array","from","this","Set","map","key","React","Component","mapDispatchToProps","connect","Select","optionClasses","name","id","options","option","htmlFor","e","target","ResultsPanel","resultsNum","addToCart","cartReducer","productIndex","productToAdd","quantity","push","isFreeShipping","sku","title","installments","currencyFormat","split","dollars","cents","toFixed","installmentsDollars","installmentsCents","src","alt","onClick","Loader","Cards","cards","removeFromCart","splice","style","CartList","listOfProducts","state","menuIsOpen","reduce","total","totalPrice","Fragment","onScroll","App","fetchProducts","axios","get","response","data","productsAreLoading","loading","productsError","error","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d61b124.chunk.js","sourcesContent":["export const LOADING_STARTED = 'LOADING_STARTED';\r\nexport const UPDATE_PRODUCTS = 'UPDATE_PRODUCTS';\r\nexport const LOADING_ENDED = 'LOADING_ENDED';\r\nexport const LOADING_ERROR = 'LOADING_ERROR';\r\nexport const UPDATE_ARRANGED_PRODUCTS = 'UPDATE_ARRANGED_PRODUCTS';\r\nexport const UPDATE_FILTERS = 'UPDATE_FILTERS';\r\nexport const UPDATE_SORTBY = 'UPDATE_SORTBY';","import axios from 'axios'\r\n\r\nimport {\r\n    LOADING_STARTED,\r\n    UPDATE_PRODUCTS,\r\n    LOADING_ENDED,\r\n    LOADING_ERROR,\r\n    UPDATE_ARRANGED_PRODUCTS,\r\n    UPDATE_FILTERS,\r\n    UPDATE_SORTBY\r\n} from '../actionTypes/cardsTypes'\r\n\r\nexport function fetchProducts() {\r\n  return async function(dispatch, getState) {\r\n    dispatch({ type: LOADING_STARTED });\r\n\r\n    try {\r\n      const response = await axios.get('https://shopping-carts-d135c.firebaseio.com/products.json');\r\n      dispatch(updateProducts(response.data));\r\n      dispatch(updateArrangedProducts(response.data));\r\n      dispatch(arrangeProducts());\r\n      dispatch({ type: LOADING_ENDED });\r\n    } catch (e) {\r\n      dispatch(loadingError(e))\r\n    };\r\n  }\r\n}\r\n\r\nexport function updateProducts(products) {\r\n  return {\r\n    type: UPDATE_PRODUCTS,\r\n    payload: products\r\n  }\r\n}\r\n\r\nexport function loadingError(e) {\r\n  return {\r\n    type: LOADING_ERROR,\r\n    payload: e\r\n  }\r\n}\r\n\r\nexport function arrangeProducts() {\r\n  return function(dispatch, getState) {\r\n    const { sortBy, filters, products } = getState().cardsReducer;\r\n    let arrangedProducts = sort([...products], sortBy);\r\n\r\n    if (filters.length) {\r\n      arrangedProducts = arrangedProducts.filter((product) => {\r\n        return product.availableSizes.some((size) => filters.indexOf(size) >= 0)\r\n      });\r\n    };\r\n\r\n    dispatch(updateArrangedProducts(arrangedProducts))\r\n  };\r\n}\r\n\r\nexport function sort(array, sortBy) {\r\n  switch (sortBy) {\r\n    case 'lowest':\r\n      return array.sort((a, b) => a.price - b.price);\r\n    case 'highest':\r\n      return array.sort((a, b) => b.price - a.price);\r\n    default:\r\n      return array;\r\n  }\r\n}\r\n\r\nexport function updateArrangedProducts(arrangedProducts) {\r\n  return {\r\n    type: UPDATE_ARRANGED_PRODUCTS,\r\n    payload: arrangedProducts\r\n  }\r\n}\r\n\r\nexport function updateFilters(filters) {\r\n  return {\r\n    type: UPDATE_FILTERS,\r\n    payload: filters\r\n  }\r\n}\r\n\r\nexport function updateSortBy(sortBy) {\r\n  return {\r\n    type: UPDATE_SORTBY,\r\n    payload: sortBy\r\n  }\r\n}","export const TOGGLE_MENU = 'TOGGLE_MENU';\r\nexport const UPDATE_CART_PRODUCTS = 'UPDATE_CART_PRODUCTS';\r\n","import {\r\n  TOGGLE_MENU,\r\n  UPDATE_CART_PRODUCTS\r\n} from '../actionTypes/cartTypes'\r\n\r\nexport function toggleMenu() {\r\n  return {\r\n    type: TOGGLE_MENU\r\n  }\r\n}\r\n\r\nexport function updateCartProducts(cartProducts) {\r\n  return ({\r\n    type: UPDATE_CART_PRODUCTS,\r\n    payload: cartProducts\r\n  })\r\n}\r\n\r\nexport function addToCart(product) {\r\n  return function(dispatch, getState) {\r\n    const products = [...getState().cartReducer.products];\r\n    const productIndex = findIndex(products, 'id', product.id);\r\n    const productToAdd = { ...product };\r\n\r\n    if (productIndex !== -1) {\r\n      products[productIndex].quantity += 1\r\n    } else {\r\n      products.push(productToAdd)\r\n      productToAdd.quantity = 1;\r\n    };\r\n\r\n    dispatch(updateCartProducts(products))\r\n  };\r\n}\r\n\r\nexport function removeFromCart(product) {\r\n  return function(dispatch, getState) {\r\n    const products = [...getState().cartReducer.products];\r\n    const productIndex = findIndex(products, 'id', product.id);\r\n\r\n    products.splice(productIndex, 1);\r\n\r\n    dispatch(updateCartProducts(products))\r\n  };\r\n}\r\n\r\nexport function findIndex(array, arrayProp, value) {\r\n  let j = array.length;\r\n\r\n  for (let i = 0; i < j; i++) {\r\n    if (array[i][arrayProp] === value) return i\r\n  }\r\n\r\n  return -1\r\n}","import React from 'react'\r\n\r\nconst Checkbox = (props) => {\r\n  const classes =['checkbox', ...(props.classes || [])].join(' ');\r\n\r\n  return (\r\n    <label className={classes} >\r\n      <input className='checkbox__control' type=\"checkbox\" onChange = {props.onChange}/>\r\n      <span className='checkbox__box'>{props.label}</span>\r\n    </label>\r\n  )\r\n};\r\n\r\nexport default Checkbox\r\n","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport Checkbox from './../Checkbox/Checkbox';\r\nimport { updateFilters, arrangeProducts } from './../../store/actions/cardsActions';\r\n\r\nconst sizes = ['XS', 'S', 'M', 'ML', 'L', 'XL', 'XXL'];\r\n\r\nclass Filter extends React.Component {\r\n\r\n  componentDidMount(){\r\n    this.filters = new Set();\r\n  }\r\n\r\n  filterProducts = (filter)=>{\r\n    const filters = this.filters;\r\n\r\n    filters.has(filter)\r\n      ? filters.delete(filter)\r\n      : filters.add(filter);\r\n\r\n    this.props.updateFilters(Array.from(filters));\r\n    this.props.arrangeProducts();\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div className='filter'>\r\n        <h4 className='filter__title'>Sizes</h4>\r\n        <ul className='sizes'>\r\n          {sizes.map((size) => (\r\n            <li className='sizes__item' key={size}>\r\n              <Checkbox label = {size} onChange= {()=>this.filterProducts(size)}/>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updateFilters,\r\n  arrangeProducts,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter)","import React from 'react';\r\n\r\nconst Select = (props) => {\r\n  const {optionClasses, name, onChange, id, options} = props;\r\n  const classes =['select', ...(props.classes || [])].join(' ');\r\n\r\n  return (\r\n    <select className={classes} name={name} id={id} onChange = {onChange} >\r\n      {options.map((option)=>(\r\n        <option className={optionClasses} value={option.value} key={option.label} >{option.label}</option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default Select;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Select from './../Select/Select';\r\nimport { updateSortBy, arrangeProducts } from './../../store/actions/cardsActions';\r\n\r\nconst SortBy = (props) => {\r\n  const {updateSortBy, arrangeProducts} = props;\r\n  const classes =['sortby', ...(props.classes || [])].join(' ');\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <label className='sortby__label' htmlFor=\"sortby__select\">Sort by </label>\r\n      <Select \r\n        optionClasses = 'sortby__option'\r\n        classes = {['sortby__select']}\r\n        options = {[\r\n          {value: 'default', label: 'Select'}, \r\n          {value: 'lowest', label: 'Lowest to highest'}, \r\n          {value: 'highest', label: 'Highest to lowest'}\r\n        ]}\r\n        name = 'sortby'\r\n        onChange = {(e)=>{updateSortBy(e.target.value); arrangeProducts()}}\r\n        id = 'sortby'\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  arrangeProducts,\r\n  updateSortBy\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SortBy)","import React from 'react'\r\nimport SortBy from './../SortBy/SortBy';\r\n\r\nconst ResultsPanel = ({resultsNum}) => (\r\n  <div className='results-panel'>\r\n    <p><span>{resultsNum}</span> Product(s) found</p>\r\n    <SortBy classes={['results-panel__sortby']}/>\r\n  </div>\r\n)\r\n\r\nexport default ResultsPanel","import React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { addToCart } from './../../store/actions/cartActions';\r\n\r\nconst Card = (props) => {\r\n  const classes =['card', ...(props.classes || [])].join(' ');\r\n  const {product, addToCart} = props;\r\n  const {isFreeShipping,sku,title,installments,currencyFormat} = product;\r\n  const [dollars, cents=0] = (''+product.price).split('.');\r\n  const [installmentsDollars, installmentsCents=0] = (product.price*0.5).toFixed(1).split('.');\r\n\r\n  return (\r\n    <div className={classes} >\r\n      <div className=\"card__img-wrap\">\r\n        {isFreeShipping && <span className='card__state'>Free shipping</span>}\r\n        <img className='card__img responsive-img' src={`images/products/${sku}_1.jpg`} alt={title} />\r\n      </div> \r\n      <h5 className='card__title'>{title}</h5>\r\n      <p className='card__basic-price'>{currencyFormat}<span>{dollars}</span>.{cents}</p>\r\n      <p className='card__spec-price'>or {installments} x{currencyFormat}<span>{installmentsDollars}</span>.{installmentsCents}</p>\r\n      <button type='button' className='btn btn_size_1 btn_theme_1' onClick = {()=>addToCart(product)}>\r\n        Add to cart\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addToCart\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Card)\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Loader.css'\r\n\r\nconst Loader = (props)=>{\r\n  const classes =['loader', ...(props.classes || [])].join(' ');\r\n  return(\r\n    <div className={classes} /> \r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react';\r\nimport Card from './../Card/Card';\r\nimport Loader from './../Loader/Loader';\r\n\r\nconst Cards = (props)=>{\r\n  const classes =['cards', ...(props.classes || [])].join(' ');\r\n\r\n  const cards = (\r\n    <div className={classes}>\r\n      { props.arrangedProducts.map((product)=>{\r\n        return (\r\n          <Card\r\n            key = {product.id}\r\n            classes = {['cards__card', 'col-lg-3', 'col-md-4', 'col-sm-6']}\r\n            product = {product}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n   );\r\n\r\n  return (\r\n    props.arrangedProducts.length\r\n    ? cards\r\n    : <Loader classes = {['cards__loader']}/>\r\n  )\r\n}\r\n\r\nexport default Cards","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { removeFromCart } from './../../store/actions/cartActions';\r\n\r\nconst CartItem = (props) =>{\r\n  const {removeFromCart, product, quantity} = props;\r\n  const {sku,title,style,currencyFormat, price, availableSizes} = product;\r\n\r\n  return (\r\n    <li className='cart-item'>\r\n      <img className='cart-item__img' src={`images/products/${sku}_2.jpg`} alt={title} />\r\n      <div className='cart-item__col'>\r\n        <h5 className='cart-item__title'>{title}</h5>\r\n        <p className='cart-item__descr'>{availableSizes.join(', ')} | {style}</p>\r\n        <p className='cart-item__quantity'>Quantity:\r\n          <span>&nbsp;{quantity}</span>\r\n        </p>\r\n      </div>\r\n      <button type='button' className='btn cart-item__remove-btn' onClick = {()=>removeFromCart(product)}>\r\n        <span>+</span>\r\n      </button>\r\n      <div className='cart-item__price'>{currencyFormat} {price.toFixed(2)}</div>\r\n    </li>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  removeFromCart\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CartItem)","import React from 'react'\r\n\r\nimport CartItem from './../CartItem/CartItem';\r\n\r\nconst CartList = (props) =>{\r\n  const {products} = props;\r\n  const listOfProducts = (\r\n    <ul className='cart-list'>\r\n      {products.map((product)=>(\r\n        <CartItem product={product} quantity = {product.quantity} key = {product.id}/>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  return products.length === 0 \r\n    ? <p className = 'cart__add-text'>Add something to cart...</p>\r\n    : listOfProducts\r\n}\r\n\r\nexport default CartList","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { toggleMenu } from './../../store/actions/cartActions';\r\nimport CartList from './../CartList/CartList';\r\n\r\nconst Cart = (props) =>{\r\n  const {toggleMenu, menuIsOpen, products} = props;\r\n  const quantity = products.reduce((total, product)=>total+product.quantity, 0);\r\n  const totalPrice = products.reduce((total, product)=>total+product.price*product.quantity, 0).toFixed(2);\r\n  const currencyFormat = (products[0] && products[0].currencyFormat) || '';\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={'hamburger hamburger_spin menu-close-btn ' + (menuIsOpen? ' is-active menu-close-btn_is_active':'')} onClick={toggleMenu}>\r\n        <div className=\"hamburger-box\">\r\n          <div className=\"hamburger-inner\"></div>\r\n        </div>\r\n      </div>\r\n      <div className={'cart' + (menuIsOpen? ' cart_is_open':'')} onScroll = {(e)=>false}>\r\n        <div className='cart__header'>\r\n          <div className='cart__logo'>\r\n            <img className='responsive-img' src='images/bag-icon.png' alt=\"\"/>\r\n            <div className='cart__num'>{quantity}</div>\r\n          </div>\r\n          <h4 className='cart__title'>Cart</h4>\r\n        </div>\r\n        <CartList products = {products}/>\r\n        <div className='cart__total'>\r\n          <div className='cart__total-col-1'>\r\n            SUBTOTAL\r\n          </div>\r\n          <div className='cart__total-col-2'>\r\n            <p className='cart__total-price'>{currencyFormat} {totalPrice}</p>\r\n          </div>\r\n        </div>\r\n        <button className='btn btn_size_1 btn_theme_1'>CHECKOUT</button>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    menuIsOpen: state.cartReducer.menuIsOpen,\r\n    products: state.cartReducer.products,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  toggleMenu,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart)","import React from 'react';\nimport { connect } from 'react-redux'\nimport { fetchProducts, updateSortBy, arrangeProducts } from './../../store/actions/cardsActions';\nimport { toggleMenu } from './../../store/actions/cartActions';\n\nimport Filter from './../Filter/Filter';\nimport ResultsPanel from './../ResultsPanel/ResultsPanel';\nimport Cards from './../Cards/Cards';\nimport Cart from './../Cart/Cart';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.fetchProducts();\n  }\n\n  render() {\n    const { arrangedProducts } = this.props;\n\n    return (\n      <React.Fragment>\n        <div className='container'>\n          <div className=\"row\">\n            <div className='aside-panel'>\n              <Filter/>\n            </div>\n            <div className='content'>\n              <ResultsPanel resultsNum = {arrangedProducts.length}/>\n              <Cards classes={['row']} arrangedProducts = {arrangedProducts}/>\n            </div>\n          </div>\n        </div>\n        <Cart/>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    arrangedProducts: state.cardsReducer.arrangedProducts,\n    productsAreLoading: state.cardsReducer.loading,\n    productsError: state.cardsReducer.error,\n    menuIsOpen: state.cartReducer.menuIsOpen,\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchProducts,\n  toggleMenu,\n  arrangeProducts,\n  updateSortBy\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  TOGGLE_MENU,\r\n  UPDATE_CART_PRODUCTS\r\n} from '../actionTypes/cartTypes'\r\n\r\nconst initialState = {\r\n  menuIsOpen: false,\r\n  products: []\r\n};\r\n\r\nexport default function cartReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_MENU:\r\n      return {\r\n        ...state,\r\n        menuIsOpen: !state.menuIsOpen\r\n      };\r\n    case UPDATE_CART_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n    LOADING_STARTED,\r\n    UPDATE_PRODUCTS,\r\n    LOADING_ENDED,\r\n    LOADING_ERROR,\r\n    UPDATE_ARRANGED_PRODUCTS,\r\n    UPDATE_FILTERS,\r\n    UPDATE_SORTBY\r\n} from '../actionTypes/cardsTypes';\r\n\r\nconst initialState = {\r\n  products: [],\r\n  arrangedProducts: [],\r\n  filters: [],\r\n  sortBy: 'Select',\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default function cardsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING_STARTED:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n      };\r\n    case LOADING_ENDED:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    case LOADING_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n\r\n    case UPDATE_ARRANGED_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        arrangedProducts: action.payload\r\n      };\r\n\r\n    case UPDATE_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.payload\r\n      };\r\n\r\n    case UPDATE_SORTBY:\r\n      return {\r\n        ...state,\r\n        sortBy: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport cartReducer from './cartReducer'\r\nimport cardsReducer from './cardsReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  cartReducer,\r\n  cardsReducer\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\n\n//styles\nimport './css/custom_reset.css';\nimport './css/normalize.css';\nimport './css/grid.css';\nimport './css/hamburger.css';\nimport './css/styles.css';\n\n//modules\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './store/reducers/rootReducer'\n\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ \n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ trace: true, traceLimit: 25 })\n    : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}